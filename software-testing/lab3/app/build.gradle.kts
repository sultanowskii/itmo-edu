/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation(libs.guava)

    implementation("org.seleniumhq.selenium:selenium-java:4.30.0")
    implementation("org.seleniumhq.selenium:selenium-chrome-driver:4.30.0")
    implementation("org.seleniumhq.selenium:selenium-firefox-driver:4.30.0")
    implementation("org.junit.jupiter:junit-jupiter-api:5.12.1")
    implementation("org.junit.jupiter:junit-jupiter-params:5.12.1")

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.12.1")

    testImplementation("org.seleniumhq.selenium:selenium-java:4.30.0")
    testImplementation("org.seleniumhq.selenium:selenium-chrome-driver:4.30.0")
    testImplementation("org.seleniumhq.selenium:selenium-firefox-driver:4.30.0")
    testImplementation(platform("org.junit:junit-bom:5.12.1"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks {
    test {
        useJUnitPlatform()
        jvmArgs("--add-opens", "java.base/java.lang=ALL-UNNAMED")
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.App"
}
